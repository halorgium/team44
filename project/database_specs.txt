Database Specs
=============================

The conversation??
-----------------------------
1 : CGI sends say hello msg
2 : DB responds with auth?
3 : for each bit needed
{
  a : CGI sends requests for data
  b : DB responds with the data
}
4 : CGI sends goodbye msg
5 : DB responds with OK

Send packet (CGI=>DB)
-----------------------------

-Auth (Later?)
-Function (see below)
-Length??
-Arguments for the function

Response packet (DB=>CGI)
-----------------------------

-Auth (Later?)
-Function
-Length??
-Data requested

Database functions:
-----------------------------

addUser
getUser
-by userid/usercode
-by name
-by email

addCommentUser
getCommentUser
-by commentid
-by ownerid
-by userid
-by title || body

addCommentArtist
getCommentArtist
-by commentid
-by ownerid
-by artistid
-by title || body

addCommentAlbum
getCommentAlbum
-by commentid
-by ownerid
-by albumid
-by title || body

addArtist
getArtist
-by artistid
-by name

addAlbum
getAlbum
-by albumid
-by artistid
-by name

addLoan
getLoan
-by loanid
-by userid
-by albumid
-by status??

Database structure:
-----------------------------

User:
-userid/usercode
-usertype (std || lib)
-name
-email

Album:
-albumid
-artistid
-name

Artist:
-artistid
-name

CommentUser:
-commentid
-ownerid
-userid
-title??
-body

CommentArtist:
-commentid
-ownerid
-artistid
-title??
-body

CommentAlbum:
-commentid
-ownerid
-albumid
-title??
-body

Loan:
-loanid
-userid
-albumid
-timestampin (better names)
-timestampout
-status (overdue || returned || on_loan)

